name: Test - Erlang 23.1
on: push
jobs:
  prepare:
    name: prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    outputs:
      build_start: ${{ steps.buildevents.outputs.build_start }}
      branch_or_tag_name: ${{ steps.buildevents.outputs.branch_or_tag_name }}
    steps:
    - name: RECORD BUILD START
      id: buildevents
      run: |
        echo "::set-output name=build_start::$(date +%s)"
        branch_or_tag_name=${GITHUB_REF#refs/*/}
        echo "::set-output name=branch_or_tag_name::$branch_or_tag_name"
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: PREPARE BUILD IMAGE
      uses: docker/build-push-action@v1
      with:
        username: _json_key
        password: ${{ secrets.GCR_JSON_KEY }}
        registry: eu.gcr.io
        repository: cf-rabbitmq-core/ci
        dockerfile: ci/dockerfiles/ci
        build_args: ERLANG_VERSION=23.1,GITHUB_RUN_ID=${{ github.run_id }},BUILDEVENT_APIKEY=${{ secrets.HONEYCOMB_API_KEY }},GITHUB_SHA=${{ github.sha }},base_rmq_ref=master,current_rmq_ref=${{ steps.buildevents.outputs.branch_or_tag_name }},RABBITMQ_VERSION=3.9.0
        tags: erlang-23.1-rabbitmq-${{ github.sha }}
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCR_JSON_KEY }}
        export_default_credentials: true
    - name: RECORD STEP FINISH
      run: |
        docker run \
          --env project=prepare \
          --env GITHUB_RUN_ID=${{ github.run_id }} \
          --env BUILDEVENT_APIKEY=${{ secrets.HONEYCOMB_API_KEY }} \
          --env STEP_START=${{ steps.buildevents.outputs.build_start }} \
          eu.gcr.io/cf-rabbitmq-core/ci:erlang-23.1-rabbitmq-${{ github.sha }} \
          ci/scripts/collect.sh
  rabbit-checks:
    name: rabbit-checks
    needs:
    - prepare
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    outputs:
      step_start: ${{ steps.buildevents.outputs.step_start }}
    steps:
    - name: RECORD STEP START
      id: buildevents
      run: |
        echo "::set-output name=step_start::$(date +%s)"
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v2
    - name: VALIDATE KNOWN CT SUITES
      env:
        project: rabbit
      run: |
        ci/scripts/validate-workflow.sh cluster_rename
    - name: RUN CHECKS
      uses: docker/build-push-action@v1
      with:
        username: _json_key
        password: ${{ secrets.GCR_JSON_KEY }}
        registry: eu.gcr.io
        repository: cf-rabbitmq-core/ci-rabbit
        dockerfile: ci/dockerfiles/ci-dep
        build_args: IMAGE_TAG=erlang-23.1-rabbitmq-${{ github.sha }},BUILDEVENT_APIKEY=${{ secrets.HONEYCOMB_API_KEY }},project=rabbit
        tags: erlang-23.1-rabbitmq-${{ github.sha }}
  rabbit-ct-cluster_rename:
    name: rabbit-ct-cluster_rename
    needs:
    - prepare
    - rabbit-checks
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCR_JSON_KEY }}
        export_default_credentials: true
    - name: PULL IMAGE
      run: |
        gcloud auth configure-docker
        docker pull eu.gcr.io/cf-rabbitmq-core/ci-rabbit:erlang-23.1-rabbitmq-${{ github.sha }}
    - name: RUN ct-cluster_rename
      run: |
        mkdir ct-cluster_rename-logs && chmod 777 ct-cluster_rename-logs
        docker run \
          --env project=rabbit \
          --env CT_SUITE=cluster_rename \
          --env GITHUB_RUN_ID=${{ github.run_id }} \
          --env BUILDEVENT_APIKEY=${{ secrets.HONEYCOMB_API_KEY }} \
          --volume ${PWD}/ct-cluster_rename-logs:/workspace/ct-logs \
          eu.gcr.io/cf-rabbitmq-core/ci-rabbit:erlang-23.1-rabbitmq-${{ github.sha }} \
          /workspace/rabbitmq/ci/scripts/ct-suite.sh
    - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
      uses: actions/upload-artifact@v2-preview
      if: always()
      with:
        name: rabbit-ct-cluster_rename-logs
        path: ct-cluster_rename-logs/*-ct-logs-*.tar.xz
  rabbit:
    name: rabbit
    needs:
    - rabbit-checks
    - rabbit-ct-cluster_rename
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCR_JSON_KEY }}
        export_default_credentials: true
    - name: RECORD STEP FINISH
      run: |
        gcloud auth configure-docker
        docker pull eu.gcr.io/cf-rabbitmq-core/ci-rabbit:erlang-23.1-rabbitmq-${{ github.sha }}
        docker run \
          --env project=rabbit \
          --env GITHUB_RUN_ID=${{ github.run_id }} \
          --env BUILDEVENT_APIKEY=${{ secrets.HONEYCOMB_API_KEY }} \
          --env STEP_START=${{ needs.rabbit-checks.outputs.step_start }} \
          eu.gcr.io/cf-rabbitmq-core/ci-rabbit:erlang-23.1-rabbitmq-${{ github.sha }} \
          /workspace/rabbitmq/ci/scripts/collect.sh
  finish:
    name: finish
    needs:
    - prepare
    - rabbit
    runs-on: ubuntu-18.04
    if: '!contains(github.event.head_commit.message, ''[ci skip]'')'
    steps:
    - uses: technote-space/workflow-conclusion-action@v1
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCR_JSON_KEY }}
        export_default_credentials: true
    - name: RECORD BUILD FINISH
      run: |
        echo -n "${{ env.WORKFLOW_CONCLUSION }}" > conclusion

        gsutil cp conclusion \
          'gs://monorepo_github_actions_conclusions/${{ github.sha }}/${{ github.workflow }}'

        gcloud auth configure-docker
        docker pull eu.gcr.io/cf-rabbitmq-core/ci:erlang-23.1-rabbitmq-${{ github.sha }}
        docker run \
          --env GITHUB_RUN_ID=${{ github.run_id }} \
          --env BUILDEVENT_APIKEY=${{ secrets.HONEYCOMB_API_KEY }} \
          --env BUILD_START=${{ needs.prepare.outputs.build_start }} \
          --env BUILD_RESULT=${{ env.WORKFLOW_CONCLUSION }} \
          eu.gcr.io/cf-rabbitmq-core/ci:erlang-23.1-rabbitmq-${{ github.sha }} \
          ci/scripts/finish.sh
